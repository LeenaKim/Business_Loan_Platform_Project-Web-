<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="rpyHistory.dao.RpyHistoryDAO">
	<resultMap type="rpyHistory" id="rpyHistoryMap">
		<result column="MID_RPY_DATE" property="midRpyDate"/>
		<result column="LOAN_NO" property="loanNo"/>
		<result column="MID_RPY_AMT" property="midRpyAmt"/>
		<result column="MID_RPY_FEE" property="midRpyFee"/>
		<result column="loan_acnt" property="loanAcnt"/>
	</resultMap>
	<!-- 모든 상환내역 조회 -->
	<select id="selectAll" parameterType="String" resultMap="rpyHistoryMap">
		select rep_no, to_char(mid_rpy_date, 'yyyy-mm-dd') as mid_rpy_date, loan_no,
        		mid_rpy_amt, mid_rpy_fee, balance,
        		(select loan_acnt 
         		from loan_history lh
         		where lh.loan_no = rh.loan_no) as loan_acnt
		from rpy_history rh
		where loan_no = #{loan_no}
		order by rep_no desc
	</select>
	<!-- 상환수수료 계산 -->
	<select id="chkRpyFee" parameterType="map" resultType="int">
		select trunc(#{midRpyAmt} * (lp.mid_rpy_fee_rate / 100) * a.left_days / a.term_days) as mid_rpy_fee
		from (select prod_no, fin_date, trunc(fin_date - start_date) as term_days, trunc(fin_date - sysdate) as left_days
	      	  from loan_history lh
	      	  where lh.loan_no = #{loanNo}) a, loan_prod lp
		where a.prod_no = lp.prod_no
	</select> 
	<!-- 상환내역 저장 -->
	<insert id="insertOne" parameterType="rpyHistory">
		insert into rpy_history(rep_no, loan_no, mid_rpy_amt) 
		values(seq_rpy_no.nextval, #{loanNo}, #{midRpyAmt})
	</insert>
</mapper>